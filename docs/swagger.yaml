openapi: 3.0.0
info:
  title: 'Express API for e-commerce pet project'
  version: '1.0.1'
  description: 'This is a REST API application made with Express. It retrieves data from the app server'
  license:
    name: 'Licensed Under MIT'
    url: 'https://spdx.org/licenses/MIT.html'
servers:
  - url: 'http://localhost:3000/api'
    description: 'Development server'
  - url: 'https://codefrondlers.store/jsfe23q4/api'
    description: 'Production server'
tags:
  - name: Products
    description: Operations related to products
  - name: Countries
    description: Operations related to countries
  - name: Users
    description: Operations related to users
paths:
  /countries:
    get:
      summary: Get the list of all countries.
      tags: [Countries]
      description: Get the list of all countries.
      responses:
        200:
          description: Successful retrieval of the list of the countries.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
        400:
          description: Bad Request.
        5XX:
          description: Unexpected error
  /users/registration:
    post:
      summary: User registration
      tags: [Users]
      description: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: Access token received from the server
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndvdF9rb25vdG9wQHVrci5uZXQiLCJpZCI6IjY2MzYzMzYxYWQ3MzA1MzZhMTg1NWI1MSIsImlzQWN0aXZhdGVkIjpmYWxzZSwiaWF0IjoxNzE0ODI4MTMyLCJleHAiOjE3MTQ4MjgxNDd9.mUtKjXXvm5A3xMCu6sPs5DyWbJXm520UxFIux3uzWE8",
                  refreshToken:
                    type: string
                    description: Refresh token received from the server
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndvdF9rb25vdG9wQHVrci5uZXQiLCJpZCI6IjY2MzYzMzYxYWQ3MzA1MzZhMTg1NWI1MSIsImlzQWN0aXZhdGVkIjpmYWxzZSwiaWF0IjoxNzE0ODI4MTMyLCJleHAiOjE3MTc0MjAxMzJ9.9CUrUXyFo6jkEfsXW9nnwJ7vrqNs0CQE79QrZlNr_sk
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                        description: The email address of the user
                        example: test@test.com
                      _id:
                        type: string
                        description: Identifier received from the server
                        example: 663a132951c79c45833675fa
                      isActivated:
                        type: boolean
                        description: current activation status of the user
                        example: false
        400:
          description: Bad Request. User is already exist
        5XX:
          description: Unexpected error
  /users/activation/{link}:
    get:
      summary: User activation
      tags: [Users]
      description: Activate a user account using the provided activation link.
      parameters:
        - in: path
          name: link
          schema:
            type: string
          required: true
          description: The activation link for the user.
      responses:
        200:
          description: User account activated successfully. As a response server redirect the user to the client page and set isActivated field as true
        400:
          description: Bad Request. Wrong activation link
        5XX:
          description: Unexpected error
  /users/login:
    post:
      summary: User login
      tags: [Users]
      description: Authenticate a user using email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: The email address of the user
                  example: test@test.com
                password:
                  type: string
                  description: The password of the user.
                  example: Smith@123
      responses:
        200:
          description: User logged in successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: Access token received from the server
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndvdF9rb25vdG9wQHVrci5uZXQiLCJpZCI6IjY2MzYzMzYxYWQ3MzA1MzZhMTg1NWI1MSIsImlzQWN0aXZhdGVkIjpmYWxzZSwiaWF0IjoxNzE0ODI4MTMyLCJleHAiOjE3MTQ4MjgxNDd9.mUtKjXXvm5A3xMCu6sPs5DyWbJXm520UxFIux3uzWE8",
                  refreshToken:
                    type: string
                    description: Refresh token received from the server
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6IndvdF9rb25vdG9wQHVrci5uZXQiLCJpZCI6IjY2MzYzMzYxYWQ3MzA1MzZhMTg1NWI1MSIsImlzQWN0aXZhdGVkIjpmYWxzZSwiaWF0IjoxNzE0ODI4MTMyLCJleHAiOjE3MTc0MjAxMzJ9.9CUrUXyFo6jkEfsXW9nnwJ7vrqNs0CQE79QrZlNr_sk
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                        description: The email address of the user
                        example: test@test.com
                      _id:
                        type: string
                        description: Identifier received from the server
                        example: 663a132951c79c45833675fa
                      isActivated:
                        type: boolean
                        description: current activation status of the user
                        example: false
        400:
          description: Bad Request. Wrong password or email
          content:
            application/json:
             schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                    example: The user with such email was not found OR Invalid Password
                  errors:
                    type: array
                    items:
                      type: string
        5XX:
          description: Unexpected error
  /users/logout:
    post:
      summary: User logout
      tags: [Users]
      description: Log out the current user from the system.
      responses:
        200:
          description: User logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  acknowledged:
                    type: boolean
                    description: A boolean value indicating whether the operation was successfully acknowledged by the server.
                    example: true
                  deletedCount:
                    type: number
                    description: The number of documents deleted from the database as a result of the operation (typically 0 or 1).
                    example: 1
        5XX:
          description: Unexpected error
  /users/refresh:
    get:
      summary: Refresh access token
      tags: [Users]
      description: Refresh the access token for the current user.
      responses:
        200:
          description: Access token refreshed successfully.
  /users/check-email:
    post:
      summary: Check if email already exists in the system.
      tags: [Users]
      description: Check if email already exists in the system.
      responses:
        200:
          description: Information about the existence of email in the system.
        5XX:
          description: Unexpected error
  /users/{userID}:
    patch:
      summary: Partial user data update.
      tags: [Users]
      description: Partial user data update.
      parameters:
        - in: path
          name: userID
          schema:
            type: string
          required: true
          description: User ID.
      responses:
        200:
          description: Updated user data.
        401:
          description: Unauthorized
        403:
          description: Forbidden
        5XX:
          description: Unexpected error
  /users/{userID}/addresses/{type}:
    post:
      summary: Add address.
      tags: [Users]
      description: Add address.
      parameters:
        - in: path
          name: userID
          schema:
            type: string
          required: true
          description: User ID.
        - in: path
          name: type
          schema:
            type: string
          required: true
          description: Address type (eg. shipping, billing).
      responses:
        200:
          description: Added address.
        401:
          description: Unauthorized
        403:
          description: Forbidden
        5XX:
          description: Unexpected error
  /users/{userID}/addresses/{type}/{id}:
    put:
      summary: Update address.
      tags: [Users]
      description: Update address.
      parameters:
        - in: path
          name: userID
          schema:
            type: string
          required: true
          description: User ID.
        - in: path
          name: type
          schema:
            type: string
          required: true
          description: Address type (eg. shipping, billing).
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Address ID.
      responses:
        200:
          description: Updated address.
        401:
          description: Unauthorized
        403:
          description: Forbidden
        5XX:
          description: Unexpected error
    delete:
      summary: Delete address.
      tags: [Users]
      description: Delete address.
      parameters:
        - in: path
          name: userID
          schema:
            type: string
          required: true
          description: User ID.
        - in: path
          name: type
          schema:
            type: string
          required: true
          description: Address type (eg. shipping, billing).
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Address ID.
      responses:
        204:
          description: No content.
        401:
          description: Unauthorized
        403:
          description: Forbidden
        5XX:
          description: Unexpected error
  /products:
    get:
      summary: Get product
      tags: [Products]
      description: Get product by vendor code
      parameters:
        - in: query
          name: vc
          schema:
            type: number
          required: true
          description: The vendor code of the product.
          example: 671296
      responses:
        200:
          description: Successful retrieval of the product.
          content:
            application/json:
              schema:
                 $ref: '#/components/schemas/Product'
    post:
      summary: Fetch products
      tags: [Products]
      description: Get products by filters
      requestBody:
        description: Search query, filters, pagination, and sorting options.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  example: Race
                  description: Search query string
                filters:
                  type: object
                  properties:
                    colors:
                      type: array
                      items:
                        type: string
                      example: ["Black", "Green"]
                      description: List of colors to filter by
                    categories:
                      type: array
                      items:
                        type: string
                      example: ["Bikes"]
                      description: List of categories to filter by
                    rating:
                      type: number
                      example: 1
                      description: Minimum rating to filter by
                    weight:
                      type: array
                      items:
                        type: number
                        format: float
                      example: [120]
                      description: List of weights to filter by
                    minPrice:
                      type: number
                      format: float
                      example: 0
                      description: Minimum price to filter by
                    maxPrice:
                      type: number
                      format: float
                      example: 2000
                      description: Maximum price to filter by
                page:
                  type: integer
                  example: 1
                  description: Page number for pagination
                pageSize:
                  type: integer
                  example: 8
                  description: Number of items per page
                sorts:
                  type: array
                  items:
                    type: object
                    properties:
                      field:
                        type: string
                        example: Alphabetically, A-Z
                        description: Field to sort by
                      order:
                        type: string
                        enum: ["ASC", "DESC"]
                        example: ASC
                        description: Sorting order (ascending or descending)
      responses:
        200:
          description: Successful retrieval of the list of the products.
          content:
            application/json:
               schema:
                type: object
                properties:
                  total:
                    type: integer
                    example: 36
                    description: Total number of products available
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductSummary'
        400:
          description: Bad Request.
        5XX:
          description: Unexpected error
  /products/best-selling:
    get:
      summary: Best Selling Bikes
      tags: [Products]
      description: Get the list of best selling bikes
      responses:
        200:
          description: Successful retrieval of the list of the product
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items: 
                      $ref: '#/components/schemas/ProductSummary'
                  total:
                    type: number
                    description: Total amount of the items
                    example: 4
        5XX:
          description: Unexpected error
  /products/filters:
     get:
      summary: Filter Categories
      tags: [Products]
      description: Get the list of possible filter categories
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      type: string
                    example: ["accessory", "bikes"]
                    description: List of product categories
                  colors:
                    type: array
                    items:
                      type: string
                    example: ["Aquamarine", "Black", "Blue", "Galactic", "Green", "Grey", "Olive", "Orange", "Purple", "Red", "Sienna", "Silver", "White", "Yellow"]
                    description: List of available product colors
                  weight:
                    type: array
                    items:
                      type: number
                      format: float
                    example: [100, 115, 130]
                    description: List of maximum weights of the rider (in kg)
                  minPrice:
                    type: number
                    format: float
                    example: 74.99
                    description: Minimum product price
                  maxPrice:
                    type: number
                    format: float
                    example: 1899.99
                    description: Maximum product price
                  rating:
                    type: array
                    items:
                      type: number
                      format: float
                    example: [3, 3.5, 4, 4.5, 5]
                    description: List of possible product ratings
        400:
          description: Bad Request
        5XX:
          description: Unexpected error
components:
  schemas:
    Country:
      type: object
      properties:
        abbrev:
            type: string
            description: Country code.
            example: FI
        name:
            type: string
            description: Country name.
            example: Finland
        postalCodePattern:
            type: string
            description: Postal code pattern.
            example: 99999
        postalRegex:
            type: string
            description: Postal code regexp.
            example: ^[0-9]{5}$
        _id:
            type: string
            description: Identifier received from the server.
            example: 663a132951c79c45833675fa
    User:
        type: object
        properties:
          email:
            type: string
            format: email
            description: The email address of the user.
            example: test@test.com
          password:
            type: string
            format: password
            description: The password of the user.
            example: Smith@123
          firstName:
            type: string
            description: The first name of the user.
            example: Alex
          lastName:
            type: string
            description: The last name of the user.
            example: Smith
          dateOfBirth:
            type: string
            format: date
            description: The date of birth of the user.
            example: 1986-08-29
          addresses:
            type: object
            properties:
              shippingAddresses:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
              billingAddresses:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
            required:
              - shippingAddresses
        required:
          - email
          - password
          - firstName
          - dateOfBirth
          - shippingAddresses
    Address:
        type: object
        properties:
          street:
            type: string
            description: The street address.
            example: Baker Street
          city:
            type: string
            description: The city.
            example: London
          postalCode:
            type: string
            description: The postal code.
            example: E17DR
          country:
            type: string
            description: The country.
            example: Great Britain
          isDefault:
            type: boolean
            description: Whether the address is default
            example: true
        required:
          - street
          - city
          - postalCode
          - country
          - isDefault
    Product:
      type: object
      properties:
        category:
          type: string
          description: The category of the product.
          example: "bikes"
          # unique: true
        title:
          type: string
          description: The title of the product.
          example: "Mountain Bike"
          # required: true
          # unique: true
          # trim: true
        description:
          type: string
          description: The description of the product.
          example: "A high-quality mountain bike suitable for all terrains."
          # trim: true
        vendorCode:
          type: number
          description: The vendor code of the product.
          example: 123456
          # unique: true
        price:
          type: number
          format: decimal
          description: The price of the product.
          example: 999.99
          # required: true
        discounted price:
          type: number
          format: decimal
          description: The price of the product with discount.
          example: 599.99
          # required: true
        color:
          type: string
          description: The color of the product.
          example: "Red"
        rating:
          type: number
          format: decimal
          description: The rating of the product (from 0 to 5 in increments of 0.5).
          example: 3.5
        overview:
          type: array
          items:
            type: string
          description: A brief overview of the product.
          example: ["Durable frame", "Hydraulic brakes"]
        specs:
          $ref: '#/components/schemas/Specs'
        weight:
          type: number
          description: The weight limit of the bike (100/115/130kg).
          example: 100
        notes:
          type: object
          properties:
            Specifications:
              type: string
              description: Additional specifications of the product.
              example: "This bike meets all safety standards."
        sizing:
          $ref: '#/components/schemas/Size'
    ProductSummary:
      type: object
      properties:
        discountedPrice: 
          type: number
          description: Discounted price of the product
          example: 599.99
        price:
          type: number
          description: The price of the product
          example: 1899.99
        rating:
          type: number
          description: The rating  of the product
          example: 4.5
        thumbs:
          type: string
          description: The thumbnail of the product in Base64 format
          example: iVBORw0KGgoAAAANSUhEUgAAAgAAAAEgCAMAAAD14jtjAAADA
        title:
          type: string
          description: The name of the product
          example: Agree Race
        vendorCode:
          type: number
          description: Vendor code of the product
          example: 670963
        _id: 
          type: string
          description: Identifier received from the server.
          example: 66508c3b61e9629b1d543d6a
    Size:
        type: object
        properties:
          seatTube:
            type: number
            description: The length of the seat tube measured from the center to the top.
            example: 440
          topTube Horizontal:
            type: number
            description: The effective length of the top tube.
            example: 535
          headAngle:
            type: number
            format: decimal
            description: The angle of the head tube.
            example: 73.5
          seatAngle:
            type: number
            format: decimal
            description: The angle of the seat tube.
            example: 74.0
          chainstays:
            type: number
            description: The length of the chainstay.
            example: 455
          bbHeightToHub:
            type: number
            description: The bottom bracket drop.
            example: 70
          wheelBase:
            type: number
            description: The total wheelbase of the bike.
            example: 1070
          headTube:
            type: number
            description: The length of the head tube.
            example: 90
          reach:
            type: number
            description: The sit-bone to centre-of-handlebar measurement.
            example: 402
          stack:
            type: number
            description: The vertical distance from the center of the bottom bracket to the virtual horizontal line from the top of the head tube.
            example: 615
    Specs:
        type: object
        properties:
          frameset:
            type: object
            properties:
              frame:
                type: string
                description: Frame of the bike.
                example: "Aluminum"
              fork:
                type: string
                description: Fork of the bike.
                example: "Carbon"
          drivetrain:
            type: object
            properties:
              crankSet:
                type: string
                description: Crank set of the bike.
                example: "Shimano Ultegra"
              chainwheel:
                type: string
                description: Chainwheel of the bike.
                example: "Shimano"
              bottomBracket:
                type: string
                description: Bottom bracket of the bike.
                example: "Shimano Hollowtech II"
              sprocket:
                type: string
                description: Sprocket of the bike.
                example: "Shimano"
              freewheel:
                type: string
                description: Freewheel of the bike.
                example: "Shimano"
              rearShifter:
                type: string
                description: Rear shifter of the bike.
                example: "Shimano Ultegra"
              chain:
                type: string
                description: Chain of the bike.
                example: "Shimano Ultegra"
              pedals:
                type: string
                description: Pedals of the bike.
                example: "Shimano PD-R550"
          brakes:
            type: object
            properties:
              frontBrake:
                type: string
                description: Front brake of the bike.
                example: "Shimano Ultegra"
              rearBrake:
                type: string
                description: Rear brake of the bike.
                example: "Shimano Ultegra"
              brakeLever:
                type: string
                description: Brake lever of the bike.
                example: "Shimano Ultegra"
          components:
            type: object
            properties:
              handlebar:
                type: string
                description: Handlebar of the bike.
                example: "Zipp SL-70"
              stem:
                type: string
                description: Stem of the bike.
                example: "Zipp Service Course"
              grips:
                type: string
                description: Grips of the bike.
                example: "Lizard Skins"
              saddle:
                type: string
                description: Saddle of the bike.
                example: "Fizik Arione"
              seatPost:
                type: string
                description: Seat post of the bike.
                example: "Zipp Service Course"
              seatClamp:
                type: string
                description: Seat clamp of the bike.
                example: "Integrated"
          wheels:
            type: object
            properties:
              frontWheel:
                type: string
                description: Front wheel of the bike.
                example: "Zipp 404"
              rearWheel:
                type: string
                description: Rear wheel of the bike.
                example: "Zipp 404"
              frontHub:
                type: string
                description: Front hub of the bike.
                example: "Zipp"
              rearHub:
                type: string
                description: Rear hub of the bike.
                example: "Zipp"
              spokes:
                type: string
                description: Spokes of the bike.
                example: "Sapim CX-Ray"
              rims:
                type: string
                description: Rims of the bike.
                example: "Zipp 404"
              tires:
                type: string
                description: Tires of the bike.
                example: "Continental GP4000S II"
              tubes:
                type: string
                description: Tubes of the bike.
                example: "Continental"
            